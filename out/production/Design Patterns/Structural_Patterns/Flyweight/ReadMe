Flyweight is a structural design pattern that lets you fit more
objects into the available amount of RAM by sharing common
parts of state between multiple objects instead of keeping all
of the data in each object.

----------------------------------------------------------------------------------
Example:
The provided code demonstrates the implementation of the Flyweight design pattern in Java.
It separates the intrinsic (immutable) state of objects, represented by the TreeType class,
from the extrinsic (mutable) state, represented by the Tree class. The TreeFactory class manages
the creation and sharing of unique TreeType instances, allowing multiple Tree objects to share
the same intrinsic state, thereby reducing memory consumption and improving performance when
dealing with a large number of similar objects.