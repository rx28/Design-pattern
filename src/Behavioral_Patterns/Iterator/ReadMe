Iterator is a behavioral design pattern that lets you traverse
elements of a collection without exposing its underlying
representation (list, stack, tree, etc.).


--------------------------------------------------------------------------------
Example:
In this scenario, the application utilizes iterators to traverse through
social network profiles. By employing iterators, it abstracts away the complexities of iterating
over different types of profiles (friends and coworkers) within the social network, allowing for
a consistent interface to access and process profile data. This design pattern helps in decoupling
the application logic from the specifics of how profiles are stored and accessed in the network,
promoting flexibility and ease of maintenance. Additionally, it enables the application to scale
efficiently as new types of profiles or traversal methods can be added without modifying existing code,
thus enhancing code modularity and extensibility.