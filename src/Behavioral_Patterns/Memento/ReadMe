Memento is a behavioral design pattern that lets you save and
restore the previous state of an object without revealing the
details of its implementation.



---------------------------------------------------------------------------------
Example:
This code exemplifies the Memento design pattern, which facilitates capturing and
restoring an object's state. The `Originator` class holds the state and provides
methods to set, get, and create snapshots of it. Snapshots are represented by
the `Snapshot` class, storing the state and a reference to the `Originator`.
The `CareTaker` class manages these snapshots, allowing the `Originator` to make
backups and undo changes. The `Runner` class demonstrates this by creating an `Originator`,
setting its state, creating a snapshot, modifying the state, and then reverting to the
previous state using the `CareTaker`. This process emphasizes the pattern's usefulness
in managing object states and facilitating undo operations.