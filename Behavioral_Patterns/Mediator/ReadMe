Mediator is a behavioral design pattern that lets you reduce
chaotic dependencies between objects. The pattern restricts
direct communications between the objects and forces them to
collaborate only via a mediator object

-------------------------------------------------------------------------------------------
Example:

In this scenario, planes (PlaneA and PlaneB)
request access to a shared resource, the runway, through a mediator (ConfigMediator).
The mediator manages runway usage by enforcing a timeout policy and ensuring that only one plane
can access the runway at a time. The planes interact with the mediator to request access, and the
mediator determines whether to grant or deny access based on the current runway status.
This pattern enhances code modularity and facilitates communication between objects without them
needing to be explicitly aware of each other, leading to more maintainable and scalable software designs.











